/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.StudentGrade;

import BUS.CourseBUS;
import BUS.StudentGradeBUS;
import BUS.PersonBUS;
import DAO.CourseDAO;
import DAO.PersonDAO;
import DAO.StudentGradeDAO;
import DTO.CourseDTO;
import DTO.PersonDTO;
import DTO.StudentGradeDTO;
import GUI.MainForm;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Anh Huy
 */
public class AddStudentGrade extends javax.swing.JFrame {
    StudentGradeBUS stdb ;
    private CourseBUS courseBUS;
    private StudentGradeBUS studentGBUS;
    private PersonBUS personBUS;
    private MainForm mainForm;
    StudentGradeDAO dao = new StudentGradeDAO();
    /**
     * Creates new form test
     */
    public AddStudentGrade() {
        initComponents();
        this.mainForm = mainForm;
        courseBUS = new CourseBUS();
        khoiTaoBus();
        showCbbStudent();
        showCbbCourseTitle();
        setLocationRelativeTo(null); 
    }
    private void khoiTaoBus(){
        try {
            stdb = new StudentGradeBUS();
            System.out.println("GUI.Add.khoiTaoBus() khởi tạo BUS success");
        } catch (Exception e) {
            System.out.println("GUI.courses.khoiTaoBus() Error : "+e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbbCourse = new javax.swing.JComboBox<>();
        txtGrade1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbbStudent = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Course");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Grade");

        txtGrade1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrade1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Add Student Grade");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Student ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(89, 89, 89))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(txtGrade1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(cbbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGrade1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGrade1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrade1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGrade1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String grade_string = txtGrade1.getText();
        while(grade_string.isEmpty() || !grade_string.matches("-?\\d+(\\.\\d+)?")){
            JOptionPane.showMessageDialog(null, grade_string + " : Không phải là số");
            return;
        }
        Float grade = Float.parseFloat(txtGrade1.getText());
        while (grade > 10 || grade < 0) {
            JOptionPane.showMessageDialog(null, grade + " : Điểm không hợp lệ");
            return;
        }

        String studentName = (String) cbbStudent.getSelectedItem(); // Lấy string cbb
        String[] studentNames = studentName.split("Name : ");   // Cắt lấy tên học sinh
        String courseTitle = (String) cbbCourse.getSelectedItem();
        String[] courseTitles = courseTitle.split("Title : ");
        // Hỏi trước khi lưu
        if (JOptionPane.showConfirmDialog(null, "New Add :\n"+studentNames[1] + "    " + courseTitles[1] + "   " + txtGrade1.getText(), "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            String[] studentIDs = studentName.split(" "); // Lấy chuỗi cắt " " lấy ra ID ở vị trí 2
            String[] courseIDs = courseTitle.split(" "); // Lấy chuỗi cắt " " để lấy ra ID ở vị trí 2
            StudentGradeDTO newStudentGrade = new StudentGradeDTO();
           
            newStudentGrade.setCourseID(Integer.parseInt(courseIDs[2]));
            newStudentGrade.setStudentID(Integer.parseInt(studentIDs[2]));
            newStudentGrade.setGrade(grade);
            try {
                stdb.AddStudentGrade(newStudentGrade);
                setVisible(false);


            } catch (Exception e) {
                e.getStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public void fillTable(){
        this.studentGBUS.ListStudentGrade();
        DefaultTableModel tblmodel = (DefaultTableModel)mainForm.gradeTB.getModel();
        tblmodel.setRowCount(0);
        ArrayList<StudentGradeDTO> listStudentGrade = studentGBUS.getList();
        for (int i = 0; i < listStudentGrade.size(); i++) {
            Object[] row = new Object[6];
            row[0] = listStudentGrade.get(i).getEnrollmentID();
            row[1] = listStudentGrade.get(i).getCourseID();
            int courseID = listStudentGrade.get(i).getCourseID();
            row[2] = courseBUS.GetCourseById(courseID).getTitle();
            row[3] = listStudentGrade.get(i).getStudentID();
            int personID = listStudentGrade.get(i).getStudentID();
            String personName = personBUS.GetPersonById(personID).getFirstName() + " " + personBUS.GetPersonById(personID).getLastName();
            row[4] = personName;
            row[5] = listStudentGrade.get(i).getGrade();
            tblmodel.addRow(row);
        }
    }
    public void loadDataIntoGradeTable(){
        this.studentGBUS.ListStudentGrade();
        DefaultTableModel model = (DefaultTableModel) mainForm.gradeTB.getModel();
        model.setRowCount(0);
        ArrayList<StudentGradeDTO> listStudentGrade = studentGBUS.getList();
        for (int i = 0; i < listStudentGrade.size(); i++) {
            Object[] row = new Object[6];
            row[0] = listStudentGrade.get(i).getEnrollmentID();
            row[1] = listStudentGrade.get(i).getCourseID();
            int courseID = listStudentGrade.get(i).getCourseID();
            row[2] = courseBUS.GetCourseById(courseID).getTitle();
            row[3] = listStudentGrade.get(i).getStudentID();
            int personID = listStudentGrade.get(i).getStudentID();
            String personName = personBUS.GetPersonById(personID).getFirstName() + " " + personBUS.GetPersonById(personID).getLastName();
            row[4] = personName;
            row[5] = listStudentGrade.get(i).getGrade();
            model.addRow(row);
        }

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        mainForm.gradeTB.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        mainForm.gradeTB.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        mainForm.gradeTB.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        mainForm.gradeTB.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
    }  
    // Hiển thị combobox 
    private void showCbbStudent(){
        PersonDAO prsDAO = new PersonDAO();
        
        try {
            ArrayList<PersonDTO> arr_person = new ArrayList<>();
            arr_person = prsDAO.getAllPerson();
            for(PersonDTO person : arr_person){
                if(person.getEnrollmentDate()!=null)
                    cbbStudent.addItem("ID : " + person.getPersonID() + " Name : " + person.getFirstName() + " " + person.getLastName());
            }
        } catch (Exception e) {
            e.getStackTrace();
        }
    }
    
    // Hiển thị combobox 
    private void showCbbCourseTitle(){
        CourseDAO crDAO = new CourseDAO();
        try {
            ArrayList<CourseDTO> arr_courses = new ArrayList<>();
            arr_courses = crDAO.getAllCourse();
            for(CourseDTO course : arr_courses){
                cbbCourse.addItem("ID : " + course.getCourseID() + " Title : " + course.getTitle());  // cbb add item
            }
        } catch (Exception e) {
            e.getStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new test().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> cbbCourse;
    public javax.swing.JComboBox<String> cbbStudent;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtGrade1;
    // End of variables declaration//GEN-END:variables
}
